# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# 				:: APPLICATION ROUTES BELLOW ::
# Home page

GET           /home                                   @controllers.Application.welcome()
GET           /                                       @controllers.Application.index()
GET           /about                                  @controllers.Application.about()
GET           /login                                  @controllers.Application.login()
GET           /logout                                 @controllers.Application.logout()
POST          /login                                  @controllers.Application.checkLogin()
GET           /util/email                             @controllers.Application.sendEmail()

# 				:: USERS ROUTES BELLOW ::

GET           /user/createprofile                     @controllers.users.UserController.createProfile()
POST          /user/createprofile                     @controllers.users.UserController.updateProfile()

GET           /user/editprofile                       @controllers.users.UserController.editProfile()
POST          /user/editprofile                       @controllers.users.UserController.saveProfile()
GET           /remove/:token                          @controllers.users.UserController.refusedUser(token: String)
GET           /user/forgot/password                   @controllers.users.UserController.forgotPassword()
POST          /user/forgot/password                   @controllers.users.UserController.sendRecoveryMail()
GET           /reset/password/:token                  @controllers.users.UserController.showResetPassword(token: String)
POST          /reset/password/:token                  @controllers.users.UserController.resetPassword(token: String)

# Route for seeing user's public profile
GET           /user/publicprofile/:id                 @controllers.users.UserController.publicProfile(id: Long)

# SECURITY FOR FULLY ACTIVE USER ONLY

GET           /user/classmates                        @controllers.users.UserController.studentList(id: Long)
GET           /message/:id                            @controllers.users.UserController.newMessage(id: Long)
POST          /message/:id                            @controllers.users.UserController.sendMessage(id: Long)
GET           /allMessage                             @controllers.users.UserController.allMessage()
GET           /message/selected/:id                   @controllers.users.UserController.seeMessage(id: Long)
GET           /message/inbox/delete/:id               @controllers.users.UserController.deleteInboxMessage(id: Long)
DELETE        /message/inbox/delete/:id               @controllers.users.UserController.deleteInboxMessage(id: Long)
GET           /message/delete/:id                     @controllers.users.UserController.deleteSendMessage(id: Long)
DELETE        /message/delete/:id                     @controllers.users.UserController.deleteSendMessage(id: Long)

#				:: ADMIN ROUTES BELLOW ::
# Admin index page

GET           /admin                                  @controllers.users.AdminController.index()

# Routes for registering new user

GET           /admin/adduser                          @controllers.users.AdminController.addNewUser()
POST          /admin/adduser                          @controllers.users.AdminController.saveNewUser(role: String)
GET           /admin/setrole/:id                      @controllers.users.AdminController.editUserRole(id: Long)

# Route for seeing all users

GET           /admin/allusers                         @controllers.users.AdminController.listOfUser()

# Route for seeing and deleting all errors logged in application

GET           /admin/errors                           @controllers.users.AdminController.seeErrors()
DELETE        /admin/error/:id                        @controllers.users.AdminController.deleteError(id: Long)

# Assign mentor to student
GET           /admin/mentorship                       @controllers.users.AdminController.mentorship()
POST          /admin/mentorship                       @controllers.users.AdminController.saveMentorship()

# See active mentorships and delete it

GET           /admin/activementors                    @controllers.users.AdminController.seeMentorsAndStudents()
DELETE        /admin/activementors/:id                @controllers.users.AdminController.deleteMentorship(id: Long)
GET           /admin/inactivementors                  @controllers.users.AdminController.inactiveMentors()
GET           /admin/mentors                          @controllers.users.AdminController.seeAllMentors()

# Routes for admin approval of user to join certain course

POST          /admin/approvestudent/:id               @controllers.users.AdminController.approveStudent(id: Long)
GET           /admin/awaitlist                        @controllers.users.AdminController.awaitList()

# Create report field

GET           /admin/createdaily                      @controllers.users.AdminController.genField()
POST          /admin/savefielddaily                   @controllers.users.AdminController.saveField()
DELETE        /admin/deletefield/:id                  @controllers.users.AdminController.deleteField(id: Long)

# See submited daily reports

GET           /listReport                             @controllers.users.AdminController.listReport()
DELETE        /listReport/:id                         @controllers.users.AdminController.deleteReport(id: Long)
GET           /listReport/:id                         @controllers.users.AdminController.deleteReport(id: Long)
GET           /listWeeklyReport                       @controllers.users.AdminController.listWeeklyReport()
DELETE        /listWeeklyReport/:id                   @controllers.users.AdminController.deleteWeeklyReport(id: Long)


# Create weekly report

GET           /admin/createweekly                     @controllers.users.AdminController.genWeeklyField()
POST          /admin/savefieldweekly                  @controllers.users.AdminController.saveWeeklyField()
DELETE        /admin/deletefieldweekly/:id            @controllers.users.AdminController.deleteWeeklyField(id: Long)

# See submited weekly report

GET           /weekly/report                          @controllers.users.MentorController.weeklyReport()
POST          /weekly/reportSubmit                    @controllers.users.MentorController.saveRaport()

# Create course

GET           /admin/createcourse                     @controllers.users.AdminController.addCourse()
POST          /admin/createcourse                     @controllers.users.AdminController.saveCourse()
GET           /admin/addnewteacher                    @controllers.users.AdminController.teachers()
POST          /admin/addnewteacher                    @controllers.users.AdminController.addTeacher()

# List of all registered users and option to delete

GET           /admin/delete/:id                       @controllers.users.AdminController.deleteUser(id: Long)
DELETE        /admin/delete/:id                       @controllers.users.AdminController.deleteUser(id: Long)

# List of active courses and option to delete or archieve

GET           /admin/courses                          @controllers.users.AdminController.courseList()
POST          /admin/courses/:id                      @controllers.users.AdminController.deleteOrArchiveCourse(id: Long)

# List of archived courses and option to activate

GET           /admin/courses/archived                 @controllers.users.AdminController.archivedCourses()
POST          /admin/courses/archived/:id             @controllers.users.AdminController.activateCourse(id: Long)

# List of deleted courses

GET           /admin/courses/deleted                  @controllers.users.AdminController.deletedCourses()


#				:: TEACHER ROUTES BELLOW ::
# Teacher list assignment

GET           /teacher/listAssignment                 @controllers.users.TeacherController.listAssignment()
POST          /teacher/approvestudent/:id             @controllers.users.TeacherController.approveStudent(id: Long)
GET           /teacher/awaitlist                      @controllers.users.TeacherController.awaitList()
GET           /teacher/reports                        @controllers.users.TeacherController.seeMentorReports()
GET           /teacher/reports/pdf                    @controllers.users.TeacherController.pdfWeeklyTable()
GET           /teacher/myreports                      @controllers.users.TeacherController.myReports()

# Daily report for teachers
GET           /daily/report                           @controllers.users.TeacherController.dailyReport()
POST          /daily/reportSubmit                     @controllers.users.TeacherController.saveRaport()

#				:: STUDENT ROUTES BELLOW ::
# Students joining course

POST          /student/joincourse                     @controllers.users.StudentController.joinCourse()
POST          /student/joincourse/haveaccess          @controllers.users.StudentController.haveCourseAccess()
GET           /student/works                          @controllers.users.StudentController.studentsWork()
GET           /student/works/status                   @controllers.users.StudentController.worksActivity(status: String)

# SECURITY FOR FULLY ACTIVE USER ONLY
# 				::COURSE ROUTES BELLOW ::

GET           /user/courses                           @controllers.course.CourseController.allCourses()
GET           /user/class/:id                         @controllers.course.CourseController.course(id: Long)

# 				:: POST ROUTES BELLOW ::
GET           /post/new                               @controllers.posts.PostController.addPost()
GET           /post/edit/:id                          @controllers.posts.PostController.editPost(id: Long)
POST          /post/edit/:id                          @controllers.posts.PostController.saveEditedPost(id: Long)
POST          /post/deletefile                        @controllers.posts.PostController.deleteFile()
POST          /post                                   @controllers.posts.PostController.savePost()
GET           /post/assignment/:id                    @controllers.posts.PostController.assignmentDetails(id: Long)
GET           /assignment/details/:id                 @controllers.users.TeacherController.studentAssignmentStatus(id: Long, status: String)

# Notification for users that applied to course #TODO MOVE TO ADMIN
POST          /notify                                 @controllers.Application.getNotification()
GET           /msgntif                                @controllers.Application.unreadMessages()
POST          /weeklyntf                              @controllers.Application.weeklyNotification()


# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                           @controllers.Assets.versioned(path="/public", file: Asset)

#Sending email


POST          /user/sendMail                          @controllers.Emails.sendMail()
POST          /user/sendStartMail                     @controllers.users.StudentController.sendStartMessage()
POST          /user/sendFinishMail                    @controllers.users.StudentController.sendFinishMessage()

POST          /user/sendMail                          @controllers.Emails.sendMail()
POST          /user/sendStartMail                     @controllers.users.StudentController.sendStartMessage()



POST          /user/sendMmail                         @controllers.Emails.sendMail()

GET           /user/contact                           @controllers.Application.contact()
POST          /user/sendUserMail                      @controllers.Emails.sendUserMail()

# Download PDF

GET           /pdfWeeklyTable                         @controllers.users.AdminController.pdfWeeklyTable()
GET           /pdfDailyTable                          @controllers.users.UserController.pdfDailyTable()
GET           /pdfDailyReports                        @controllers.users.UserController.pdfDailyReports(id: Long)
GET           /pdfWeeklyReports                       @controllers.users.UserController.pdfWeeklyReports(id: Long)


# Open weekly reports
GET           /openWeeklyReport                       @controllers.users.UserController.openWeeklyReport(id: Long)

# Open daily reports

GET           /openReport                             @controllers.users.UserController.openReport(id: Long)

# FAQ page

GET           /faq                                    @controllers.Application.faq()
GET           /faq/setup                              @controllers.users.AdminController.setupFAQ()
POST          /faq/setup                              @controllers.users.AdminController.saveFAQ()
GET           /faq/edit/:id                           @controllers.users.AdminController.editFAQ(id: Long)
POST          /faq/edit/:id                           @controllers.users.AdminController.upDateFaq(id: Long)
DELETE        /faq/delete/:id                         @controllers.users.AdminController.deleteFAQ(id: Long)

# Calendar view and events list

GET           /calendar/:id                           @controllers.users.UserController.calendar(id: Long)
GET           /admin/calendar/events                  @controllers.users.UserController.list()
GET           /events.json                            @controllers.users.UserController.json(start: Long ?= 0, end: Long ?= 0 )

GET           /calendar/event/:id                     @controllers.users.UserController.edit(id:Long)
POST          /admin/calendar/event/:id/update        @controllers.users.UserController.update(id:Long)
POST          /admin/calendar/event                   @controllers.users.UserController.add()
GET           /admin/calendar/event/new               @controllers.users.UserController.blank()
GET           /admin/calendar/event/:id/delete        controllers.users.UserController.delete(id:Long)
DELETE        /admin/calendar/event/:id/delete        controllers.users.UserController.delete(id:Long)

POST          /admin/calendar/event-ajax              @controllers.users.UserController.addByAjax()
POST          /admin/calendar/event-move              @controllers.users.UserController.move()
POST          /admin/calendar/event-resize            @controllers.users.UserController.resize()

# API routes
POST          /api/login                              @controllers.api.UserAPIController.login()
POST          /api/courses                            @controllers.api.UserAPIController.sendCourses()
POST          /api/students                           @controllers.api.UserAPIController.sendStudents()
POST          /api/posts                              @controllers.api.UserAPIController.sendPosts()
POST          /api/messages                           @controllers.api.UserAPIController.sendAllMessages()
POST          /api/send_message                       @controllers.api.UserAPIController.sendMessage()
GET           /api/calendar/:id                       @controllers.api.UserAPIController.calendar(id:Long)



